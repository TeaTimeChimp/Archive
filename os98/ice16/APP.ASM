	.386p
	ifndef	??version
?debug	macro
	endm
publicdll macro	name
	public	name
	endm
	endif
	?debug	V 300h
	?debug	S "APP.CPP"
	?debug	C E99B813224074150502E435050
	?debug	C E91D7F3224054150502E48
	?debug	C E9017E3224054350552E48
	?debug	C E9B0A82E2406424F4F4C2E48
	?debug	C E98B7E32240A43505554595045532E48
	?debug	C E960613124054744542E48
	?debug	C E9F37031240444542E48
	?debug	C E98B7E32240A43505554595045532E48
	?debug	C E980261D1F18433A5C424334355C494E434C5544455C4D414C4C4F+
	?debug	C 432E48
	?debug	C E980261D1F17433A5C424334355C494E434C5544455C414C4C4F43+
	?debug	C 2E48
	?debug	C E980261D1F17433A5C424334355C494E434C5544455C5F44454653+
	?debug	C 2E48
	?debug	C E980261D1F17433A5C424334355C494E434C5544455C5F4E554C4C+
	?debug	C 2E48
	?debug	C E9947E32240743505533322E48
	?debug	C E98B7E32240A43505554595045532E48
	?debug	C E9358232241F5C574F524B53484F505C4C4942524152595C4C4942+
	?debug	C 4350505C46494C452E48
	?debug	C E980261D1F14433A5C424334355C494E434C5544455C494F2E48
	?debug	C E980261D1F18433A5C424334355C494E434C5544455C5F4E46494C+
	?debug	C 452E48
	?debug	C E980261D1F17433A5C424334355C494E434C5544455C46434E544C+
	?debug	C 2E48
	?debug	C E980261D1F1A433A5C424334355C494E434C5544455C5359535C53+
	?debug	C 5441542E48
	?debug	C E980261D1F1B433A5C424334355C494E434C5544455C5359532F54+
	?debug	C 595045532E48
	?debug	C E9B0A82E241F5C574F524B53484F505C4C4942524152595C4C4942+
	?debug	C 4350505C424F4F4C2E48
	?debug	C E9EB813224215C574F524B53484F505C4C4942524152595C4C4942+
	?debug	C 4350505C535452494E472E48
	?debug	C E957AC2F24084B45524E454C2E48
	?debug	C E980261D1F17433A5C424334355C494E434C5544455C535444494F+
	?debug	C 2E48
_TEXT	segment byte public use16 'CODE'
_TEXT	ends
DGROUP	group	_DATA,_BSS
	assume	cs:_TEXT,ds:DGROUP
_DATA	segment word public use16 'DATA'
d@	label	byte
d@w	label	word
_DATA	ends
_BSS	segment word public use16 'BSS'
b@	label	byte
b@w	label	word
_BSS	ends
_TEXT	segment byte public use16 'CODE'
	?debug	C E801074150502E4350509B813224
   ;	
   ;	unsigned long CApplication::CodeBase()
   ;	
	?debug	L 16
	assume	cs:_TEXT
@CApplication@CodeBase$qv	proc	near
	?debug	B
	enter	4,0
	push	si
	?debug	C F81940434170706C69636174696F6E40436F6465+
	?debug	C 42617365247176
	?debug	C E318000200151904
	?debug	C E6047468697318040600
	mov	si,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @1@86
	call	near ptr N_OVERFLOW@
@1@86:
   ;	
   ;	{
   ;		unsigned long lCodeBase;
   ;	
   ;		// Get base address of 32-bit code segment.
   ;		lCodeBase = CodeBase32();
   ;	
	?debug	L 21
	call	near ptr _CodeBase32
	push	dx
	push	ax
	pop	eax
	mov	dword ptr [bp-4],eax
   ;	
   ;	
   ;		// Return code segment base address.
   ;		return lCodeBase;
   ;	
	?debug	L 24
	mov	eax,dword ptr [bp-4]
	shld	edx,eax,16
	jmp	short @1@114
@1@114:
   ;	
   ;	}
   ;	
	?debug	L 25
	pop	si
	leave	
	ret	
	?debug	C E6096C436F6465426173650C02FCFF0004746869+
	?debug	C 7318040600
	?debug	E
	?debug	E
@CApplication@CodeBase$qv	endp
   ;	
   ;	ADDRESS CApplication::CodeLimit()
   ;	
	?debug	L 37
	assume	cs:_TEXT
@CApplication@CodeLimit$qv	proc	near
	?debug	B
	enter	4,0
	?debug	C F81A40434170706C69636174696F6E40436F6465+
	?debug	C 4C696D6974247176
	?debug	C E6047468697318040300
	mov	bx,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @2@86
	call	near ptr N_OVERFLOW@
@2@86:
   ;	
   ;	{
   ;		DWORD iCodeLimit;
   ;	
   ;		// Limit code to 64K.
   ;		iCodeLimit = 0x0000ffff;
   ;	
	?debug	L 42
	mov	dword ptr [bp-4],large 00000FFFFh
   ;	
   ;	
   ;		// Return code segment limit.
   ;		return iCodeLimit;
   ;	
	?debug	L 45
	mov	eax,dword ptr [bp-4]
	shld	edx,eax,16
	jmp	short @2@114
@2@114:
   ;	
   ;	}
   ;	
	?debug	L 46
	leave	
	ret	
	?debug	C E60A69436F64654C696D69740C02FCFF00047468+
	?debug	C 697318040300
	?debug	E
	?debug	E
@CApplication@CodeLimit$qv	endp
   ;	
   ;	ADDRESS CApplication::DataBase()
   ;	
	?debug	L 58
	assume	cs:_TEXT
@CApplication@DataBase$qv	proc	near
	?debug	B
	enter	4,0
	push	si
	?debug	C F81940434170706C69636174696F6E4044617461+
	?debug	C 42617365247176
	?debug	C E6047468697318040600
	mov	si,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @3@86
	call	near ptr N_OVERFLOW@
@3@86:
   ;	
   ;	{
   ;		ADDRESS iDataBase;
   ;	
   ;		// Get base address of data segment.
   ;		iDataBase = GetDataBase();
   ;	
	?debug	L 63
	call	near ptr _GetDataBase
	push	dx
	push	ax
	pop	eax
	mov	dword ptr [bp-4],eax
   ;	
   ;	
   ;		// Return data segment base address.
   ;		return iDataBase;
   ;	
	?debug	L 66
	mov	eax,dword ptr [bp-4]
	shld	edx,eax,16
	jmp	short @3@114
@3@114:
   ;	
   ;	}
   ;	
	?debug	L 67
	pop	si
	leave	
	ret	
	?debug	C E6096944617461426173650C02FCFF0004746869+
	?debug	C 7318040600
	?debug	E
	?debug	E
@CApplication@DataBase$qv	endp
   ;	
   ;	ADDRESS CApplication::DataLimit()
   ;	
	?debug	L 79
	assume	cs:_TEXT
@CApplication@DataLimit$qv	proc	near
	?debug	B
	enter	4,0
	?debug	C F81A40434170706C69636174696F6E4044617461+
	?debug	C 4C696D6974247176
	?debug	C E6047468697318040300
	mov	bx,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @4@86
	call	near ptr N_OVERFLOW@
@4@86:
   ;	
   ;	{
   ;		DWORD iDataLimit;
   ;	
   ;		// Limit data to 64K.
   ;		iDataLimit = 0x0000ffff;
   ;	
	?debug	L 84
	mov	dword ptr [bp-4],large 00000FFFFh
   ;	
   ;	
   ;		// Return data segment limit.
   ;		return iDataLimit;
   ;	
	?debug	L 87
	mov	eax,dword ptr [bp-4]
	shld	edx,eax,16
	jmp	short @4@114
@4@114:
   ;	
   ;	}
   ;	
	?debug	L 88
	leave	
	ret	
	?debug	C E60A69446174614C696D69740C02FCFF00047468+
	?debug	C 697318040300
	?debug	E
	?debug	E
@CApplication@DataLimit$qv	endp
   ;	
   ;	ADDRESS CApplication::EntryPoint()
   ;	
	?debug	L 100
	assume	cs:_TEXT
@CApplication@EntryPoint$qv	proc	near
	?debug	B
	enter	4,0
	?debug	C F81B40434170706C69636174696F6E40456E7472+
	?debug	C 79506F696E74247176
	?debug	C E6047468697318040300
	mov	bx,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @5@86
	call	near ptr N_OVERFLOW@
@5@86:
   ;	
   ;	{
   ;		ADDRESS iEntryPoint;
   ;	
   ;		// Add entry point offset to code base.
   ;		iEntryPoint = ((ADDRESS)main32)&0x0000ffffL;
   ;	
	?debug	L 105
	mov	ax,offset _main32
	mov	dx,cs
	push	dx
	push	ax
	pop	eax
	and	eax,large 00000FFFFh
	mov	dword ptr [bp-4],eax
   ;	
   ;	
   ;		// Return entry point.
   ;		return iEntryPoint;
   ;	
	?debug	L 108
	mov	eax,dword ptr [bp-4]
	shld	edx,eax,16
	jmp	short @5@114
@5@114:
   ;	
   ;	}
   ;	
	?debug	L 109
	leave	
	ret	
	?debug	C E60B69456E747279506F696E740C02FCFF000474+
	?debug	C 68697318040300
	?debug	E
	?debug	E
@CApplication@EntryPoint$qv	endp
   ;	
   ;	CCPU& CApplication::CPU()
   ;	
	?debug	L 121
	assume	cs:_TEXT
@CApplication@CPU$qv	proc	near
	?debug	B
	push	bp
	mov	bp,sp
	?debug	C F81440434170706C69636174696F6E4043505524+
	?debug	C 7176
	?debug	C E6047468697318040200
	mov	dx,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @6@86
	call	near ptr N_OVERFLOW@
@6@86:
   ;	
   ;	{
   ;		// Return reference to processor object.
   ;		return m_CPU;
   ;	
	?debug	L 124
	mov	ax,dx
	jmp	short @6@114
@6@114:
   ;	
   ;	}
   ;	
	?debug	L 125
	pop	bp
	ret	
	?debug	C E6047468697318040200
	?debug	E
	?debug	E
@CApplication@CPU$qv	endp
   ;	
   ;	int CApplication::Run()
   ;	
	?debug	L 138
	assume	cs:_TEXT
@CApplication@Run$qv	proc	near
	?debug	B
	enter	20,0
	push	si
	?debug	C F81440434170706C69636174696F6E4052756E24+
	?debug	C 7176
	?debug	C E6047468697318040600
	mov	si,word ptr [bp+4]
	?debug	B
	cmp	word ptr ___brklvl,sp
	jb	short @7@86
	call	near ptr N_OVERFLOW@
@7@86:
   ;	
   ;	{
   ;		SELECTOR iCode;
   ;		SELECTOR iData;
   ;		CFile KernelImage;
   ;	
	?debug	L 142
	lea	ax,word ptr [bp-20]
	push	ax
	call	near ptr @CFile@$bctr$qv
	pop	cx
   ;	
   ;		void* pKernelImage;
   ;	
   ;		// Logo.
   ;		printf( "digitex iAPX loader Version 2.0.00" );
   ;	
	?debug	L 146
	push	offset DGROUP:s@
	call	near ptr _printf
	pop	cx
   ;	
   ;	
   ;		// Check for 32-bit processor.
   ;		if( m_CPU.IsCompatible()==true )
   ;	
	?debug	L 149
	push	si
	call	near ptr @CCPU@IsCompatible$qv
	pop	cx
	cmp	ax,1
	je short	@@5
	jmp	@7@226
@@5:
   ;	
   ;		{
   ;			// Save CPU state at startup, will be used again on exit.
   ;			m_CPU.Save();
   ;	
	?debug	L 152
	push	si
	call	near ptr @CCPU@Save$qv
	pop	cx
   ;	
   ;	
   ;			// Protection must be disabled.
   ;			if( m_CPU.ProtectionEnabled()==false )
   ;	
	?debug	L 155
	push	si
	call	near ptr @CCPU@ProtectionEnabled$qv
	pop	cx
	or	ax,ax
	jne	short @7@170
   ;	
   ;			{
   ;				// Suspend processing of interrupts.
   ;				m_CPU.InterruptsEnabled( false );
   ;	
	?debug	L 158
	push	0
	push	si
	call	near ptr @CCPU@InterruptsEnabled$q4bool
	add	sp,4
   ;	
   ;	
   ;				// Construct basic global descriptor table.
   ;				iCode = m_CPU.GDT().AddSegment( ST_EXECUTE_READ, PL_0, CodeBase(), CodeLimit() );
   ;	
	?debug	L 161
	push	si
	call	near ptr @CApplication@CodeLimit$qv
	pop	cx
	push	dx
	push	ax
	push	si
	call	near ptr @CApplication@CodeBase$qv
	pop	cx
	push	dx
	push	ax
	push	0
	push	10
	push	si
	call	near ptr @CCPU@GDT$qv
	pop	cx
	push	ax
	call	near ptr @CGDT@AddSegment$qucuculul
	add	sp,14
	mov	word ptr [bp-2],ax
   ;	
   ;				iData = m_CPU.GDT().AddSegment( ST_READ_WRITE, PL_0, 0x00000000L, 0xffffffffL );
   ;	
	?debug	L 162
	push	large -1
	push	large 0
	push	0
	push	2
	push	si
	call	near ptr @CCPU@GDT$qv
	pop	cx
	push	ax
	call	near ptr @CGDT@AddSegment$qucuculul
	add	sp,14
	mov	word ptr [bp-4],ax
   ;	
   ;	
   ;				// Load 32-bit kernel image.
   ;				pKernelImage = KernelImage.Load( "ice32.exe" );
   ;	
	?debug	L 165
	push	offset DGROUP:s@+35
	lea	ax,word ptr [bp-20]
	push	ax
	call	near ptr @CFile@Load$qpzc
	add	sp,4
	mov	word ptr [bp-6],ax
   ;	
   ;	
   ;				// Enable protection mechanisms.
   ;				m_CPU.ProtectionEnabled( true );
   ;	
	?debug	L 168
	push	1
	push	si
	call	near ptr @CCPU@ProtectionEnabled$q4bool
	add	sp,4
   ;	
   ;	
   ;				// Restart at 32-bit entry point.
   ;				m_CPU.InstructionPointer( iCode, EntryPoint() );
   ;	
	?debug	L 171
	push	si
	call	near ptr @CApplication@EntryPoint$qv
	pop	cx
	push	dx
	push	ax
	push	word ptr [bp-2]
	push	si
	call	near ptr @CCPU@InstructionPointer$qusul
	add	sp,8
   ;	
   ;			}
   ;	
	?debug	L 172
	jmp	short @7@198
@7@170:
   ;	
   ;			else
   ;			{
   ;				// Protection is enabled.
   ;				printf( "\nProtection already enabled." );
   ;	
	?debug	L 176
	push	offset DGROUP:s@+45
	call	near ptr _printf
	pop	cx
@7@198:
   ;	
   ;			}
   ;		}
   ;	
	?debug	L 178
	jmp	short @7@254
@7@226:
   ;	
   ;		else
   ;		{
   ;			// Processor is not compatible.
   ;			printf( "\nProcessor is not compatible." );
   ;	
	?debug	L 182
	push	offset DGROUP:s@+74
	call	near ptr _printf
	pop	cx
@7@254:
   ;	
   ;		}
   ;	
   ;		// Return general error.
   ;		return 1;
   ;	
	?debug	L 186
	mov	ax,1
	jmp	short @7@282
@7@282:
   ;	
   ;	}
   ;	
	?debug	L 187
	pop	si
	leave	
	ret	
	?debug	C E31A000200150104
	?debug	C E60C704B65726E656C496D6167651A02FAFF000B+
	?debug	C 4B65726E656C496D6167651B02ECFF0005694461+
	?debug	C 74610A02FCFF000569436F64650A02FEFF000474+
	?debug	C 68697318040600
	?debug	E
	?debug	E
@CApplication@Run$qv	endp
	?debug	C E9
	?debug	C FA00000000
_TEXT	ends
_DATA	segment word public use16 'DATA'
s@	label	byte
	db	'digitex iAPX loader Version 2.0.00'
	db	0
	db	'ice32.exe'
	db	0
	db	10
	db	'Protection already enabled.'
	db	0
	db	10
	db	'Processor is not compatible.'
	db	0
_DATA	ends
_TEXT	segment byte public use16 'CODE'
_TEXT	ends
	?debug	C E31B054346696C650E002E02
	?debug	C ED00020000010000
	?debug	C E31C0743537472696E6704002E03
	?debug	C ED000300001A0000
	?debug	C E31D000200150204
	?debug	C E31E0000002D1C00011C00174043537472696E67+
	?debug	C 4061667465724C6173742471707A63
	?debug	C E3200000002D0100011C00144043537472696E67+
	?debug	C 40617070656E642471707A63
	?debug	C E3220000002D0100011C00194043537472696E67+
	?debug	C 40617070656E6424713743537472696E67
	?debug	C E3240000002D1C00011C00184043537472696E67+
	?debug	C 406265666F72654C6173742471707A63
	?debug	C E326000200151C04
	?debug	C E3270000002D2600011C00114043537472696E67+
	?debug	C 402462637472247176
	?debug	C E3290000002D0100011C001F4043537472696E67+
	?debug	C 40636F6E7665727446726F6D496E666F726D6978+
	?debug	C 247176
	?debug	C E32B0000002D0100011C00114043537472696E67+
	?debug	C 406572617365247176
	?debug	C E32D0000002D1D00011C00144043537472696E67+
	?debug	C 406765744368617273247176
	?debug	C E32F0000002D0400011C00154043537472696E67+
	?debug	C 406765744C656E677468247176
	?debug	C E3310000002D0400011C00154043537472696E67+
	?debug	C 40696E6465784F662471707A63
	?debug	C E3330000002D0400011C001A4043537472696E67+
	?debug	C 40696E6465784F6624713743537472696E67
	?debug	C E3350000002D0100011C00154043537472696E67+
	?debug	C 40696E736572742471707A6369
	?debug	C E3370000002D0100011C00174043537472696E67+
	?debug	C 407265706C6163652471707A637431
	?debug	C E3390000002D0100011C00114043537472696E67+
	?debug	C 407365742471707A63
	?debug	C E33B0000002D0100011C00164043537472696E67+
	?debug	C 4073657424713743537472696E67
	?debug	C E33D0000002D1C00011C00164043537472696E67+
	?debug	C 40737562737472696E6724716969
	?debug	C E33F000200151B04
	?debug	C E3400000002D3F00011B000F404346696C654024+
	?debug	C 62637472247176
	?debug	C E3420000002D0100011B000F404346696C654063+
	?debug	C 6C6F7365247176
	?debug	C E34404626F6F6C020022000080FF7F2D
	?debug	C E3460000002D4400011B0013404346696C654065+
	?debug	C 6E644F6646696C65247176
	?debug	C E3480000002D0100011B000F404346696C654065+
	?debug	C 72617365247176
	?debug	C E34A0000002D4400011B0010404346696C654065+
	?debug	C 7869737473247176
	?debug	C E34C0000002D1C00011B0015404346696C654067+
	?debug	C 65744C6F636174696F6E247176
	?debug	C E34E0000002D1C00011B0015404346696C654067+
	?debug	C 657446696C656E616D65247176
	?debug	C E3500000002D0100011B001B404346696C654067+
	?debug	C 6574556E6971756546696C656E616D65247176
	?debug	C E3520000002D1A00011B0010404346696C65404C+
	?debug	C 6F61642471707A63
	?debug	C E3540000002D0100011B000E404346696C65404F+
	?debug	C 70656E247176
	?debug	C E3560000002D0100011B0015404346696C65404F+
	?debug	C 70656E24713743537472696E67
	?debug	C E3580000002D0100011B0017404346696C65404F+
	?debug	C 70656E24713743537472696E677431
	?debug	C E35A0000002D0600011B0011404346696C654072+
	?debug	C 6561642471707A636C
	?debug	C E35C0000002D1D00011B0012404346696C654072+
	?debug	C 6561644C696E65247176
	?debug	C E35E0000002D0600011B0015404346696C654072+
	?debug	C 6561644C696E652471707A636C
	?debug	C E3600000002D0100011B0013404346696C654073+
	?debug	C 6574416363657373247169
	?debug	C E3620000002D0100011B001D404346696C654073+
	?debug	C 65744469726563746F727924713743537472696E+
	?debug	C 67
	?debug	C E3640000002D0100011B0013404346696C654073+
	?debug	C 65744D6F64652471707A63
	?debug	C E3660000002D0100011B001A404346696C654077+
	?debug	C 726974654C696E6524713743537472696E67
	?debug	C E3190C434170706C69636174696F6E42002E01
	?debug	C ED000100002F0000
	?debug	C E368044343505542002E04
	?debug	C ED00040000380000
	?debug	C E36A104344657363726970746F725461626C6506+
	?debug	C 002E06
	?debug	C ED00060000650000
	?debug	C E36B000200156804
	?debug	C E36D0B5344657363726970746F7208002E07
	?debug	C ED00070000730100
	?debug	C E36E0002001E8082
	?debug	C E36C000200156D04
	?debug	C E36F0000002D6C00016A00234043446573637269+
	?debug	C 70746F725461626C6540416C6C6F636174655461+
	?debug	C 626C6524717573
	?debug	C E3710000002D0100016A00374043446573637269+
	?debug	C 70746F725461626C654053657444657363726970+
	?debug	C 746F7224717031315344657363726970746F7275+
	?debug	C 637563756C756C
	?debug	C E3730000002D0100016A00394043446573637269+
	?debug	C 70746F725461626C65405365744D656D6F727944+
	?debug	C 657363726970746F722471703131534465736372+
	?debug	C 6970746F72756C756C
	?debug	C E375000200156A04
	?debug	C E3760000002D7500016A001A4043446573637269+
	?debug	C 70746F725461626C65402462637472247176
	?debug	C E3780000002D0100016A001A4043446573637269+
	?debug	C 70746F725461626C65402462647472247176
	?debug	C E37A0000002D0A00016A00264043446573637269+
	?debug	C 70746F725461626C65404164645365676D656E74+
	?debug	C 247175637563756C756C
	?debug	C E37C0000002D0C00016A00194043446573637269+
	?debug	C 70746F725461626C654042617365247176
	?debug	C E37E0000002D6B00016A00184043446573637269+
	?debug	C 70746F725461626C6540435055247176
	?debug	C E380800000002D0100016A001D40434465736372+
	?debug	C 6970746F725461626C6540435055247170344343+
	?debug	C 5055
	?debug	C E380820000002D0A00016A001A40434465736372+
	?debug	C 6970746F725461626C65404C696D6974247176
	?debug	C E369044347445406002E05
	?debug	C ED00050000808900010600
	?debug	C E380840000002D0A000169001A40434744544041+
	?debug	C 64645365676D656E74247175637563756C756C
	?debug	C E38086106370755F617263686974656374757265+
	?debug	C 020022000080FF7F808B
	?debug	C E38088096370755F6D6F64656C020022000080FF+
	?debug	C 7F808D
	?debug	C E3808A0000002D01000168000E40434350554050+
	?debug	C 726F6265247176
	?debug	C E3808C0000002D6B000168000E40434350554024+
	?debug	C 62637472247176
	?debug	C E3808E0000002D01000168000E40434350554024+
	?debug	C 62647472247176
	?debug	C E380900000002D80860001680015404343505540+
	?debug	C 417263686974656374757265247176
	?debug	C E380920000002D0C000168000C40434350554043+
	?debug	C 5230247176
	?debug	C E380940000002D01000168000D40434350554043+
	?debug	C 52302471756C
	?debug	C E380960000002D01000168001540434350554044+
	?debug	C 6174615365676D656E7424717573
	?debug	C E380980000002D0C000168000F40434350554045+
	?debug	C 466C616773247176
	?debug	C E3809A0000002D01000168001040434350554045+
	?debug	C 466C6167732471756C
	?debug	C E3809C0000002D0A000168000E40434350554046+
	?debug	C 6C616773247176
	?debug	C E3809E0000002D01000168000F40434350554046+
	?debug	C 6C61677324717573
	?debug	C E380A00000002D01000168001E40434350554049+
	?debug	C 6E737472756374696F6E506F696E746572247175+
	?debug	C 73756C
	?debug	C E380A20000002D44000168001A40434350554049+
	?debug	C 6E7465727275707473456E61626C6564247176
	?debug	C E380A40000002D01000168001E40434350554049+
	?debug	C 6E7465727275707473456E61626C656424713462+
	?debug	C 6F6F6C
	?debug	C E380A60000002D44000168001540434350554049+
	?debug	C 73436F6D70617469626C65247176
	?debug	C E380A8000200346904
	?debug	C E380A90000002D80A8000168000C404343505540+
	?debug	C 474454247176
	?debug	C E380AB0000002D01000168001040434350554047+
	?debug	C 4454522471756C7573
	?debug	C E380AD0000002D8088000168000E404343505540+
	?debug	C 4D6F64656C247176
	?debug	C E380AF0000002D0A000168000C4043435055404D+
	?debug	C 5357247176
	?debug	C E380B10000002D01000168000D4043435055404D+
	?debug	C 535724717573
	?debug	C E380B30000002D44000168001A40434350554050+
	?debug	C 726F74656374696F6E456E61626C6564247176
	?debug	C E380B50000002D01000168001E40434350554050+
	?debug	C 726F74656374696F6E456E61626C656424713462+
	?debug	C 6F6F6C
	?debug	C E380B70000002D04000168001040434350554052+
	?debug	C 6573746F7265247176
	?debug	C E380B90000002D01000168000D40434350554053+
	?debug	C 617665247176
	?debug	C E380BB0000002D08000168001140434350554057+
	?debug	C 6F726453697A65247176
	?debug	C E380BD0000002D0C000119001940434170706C69+
	?debug	C 636174696F6E40436F646542617365247176
	?debug	C E380BF0000002D0C000119001A40434170706C69+
	?debug	C 636174696F6E40436F64654C696D6974247176
	?debug	C E380C1000200346804
	?debug	C E380C20000002D80C1000119001440434170706C+
	?debug	C 69636174696F6E40435055247176
	?debug	C E380C40000002D0C000119001940434170706C69+
	?debug	C 636174696F6E404461746142617365247176
	?debug	C E380C60000002D0C000119001A40434170706C69+
	?debug	C 636174696F6E40446174614C696D6974247176
	?debug	C E380C80000002D0C000119001B40434170706C69+
	?debug	C 636174696F6E40456E747279506F696E74247176
	?debug	C E380CA0000002D04000119001440434170706C69+
	?debug	C 636174696F6E4052756E247176
	extrn	N_OVERFLOW@:far
	extrn	___brklvl:far
	extrn	_printf:near
	extrn	_main32:near
	extrn	@CFile@Load$qpzc:near
	extrn	@CFile@$bctr$qv:near
	public	@CApplication@Run$qv
	public	@CApplication@EntryPoint$qv
	public	@CApplication@DataLimit$qv
	public	@CApplication@DataBase$qv
	public	@CApplication@CPU$qv
	public	@CApplication@CodeLimit$qv
	public	@CApplication@CodeBase$qv
	extrn	@CCPU@Save$qv:near
	extrn	@CCPU@ProtectionEnabled$q4bool:near
	extrn	@CCPU@ProtectionEnabled$qv:near
	extrn	@CCPU@GDT$qv:near
	extrn	@CCPU@IsCompatible$qv:near
	extrn	@CCPU@InterruptsEnabled$q4bool:near
	extrn	@CCPU@InstructionPointer$qusul:near
	extrn	_GetDataBase:near
	extrn	_CodeBase32:near
	extrn	@CGDT@AddSegment$qucuculul:near
_s@	equ	s@
	?debug	C EA0508
	?debug	C E380CC00000023040500
	?debug	C EB0B4E5F4F564552464C4F574080CC00
	?debug	C EB095F5F5F62726B6C766C80CC00
	?debug	C E380CD00000023040001
	?debug	C EB075F7072696E746680CD00
	?debug	C E380CE00000023010000
	?debug	C EB075F6D61696E333280CE00
	?debug	C E380CF04737461741E001E8094
	?debug	C E380D0056674696D6504001E80A0
	?debug	C E380D1000000230C0000
	?debug	C EB0C5F476574446174614261736580D100
	?debug	C E380D2000000230C0000
	?debug	C EB0B5F436F646542617365333280D200
	?debug	C E380D3095F68656170696E666F06001E80A7
	?debug	C E380D4000200150404
	?debug	C E380D50868656170696E666F06001E80AB
	?debug	C E380D60B66617268656170696E666F0A001E80AF
	?debug	C E380D7000400160101
	?debug	C E380D810535461626C6544657363726970746F72+
	?debug	C 06001E80B3
	?debug	C E380D90D53466172506F696E746572333206001E+
	?debug	C 80B6
	?debug	C E380DA0D53466172506F696E746572313604001E+
	?debug	C 80B9
	?debug	C E60666706F735F740606000674696D655F740606+
	?debug	C 00095F48454150494E464F80D306000673697A65+
	?debug	C 5F740A060009707472646966665F74040600064F+
	?debug	C 46465345540C06000544574F52440C0600074144+
	?debug	C 44524553530C060004574F52440A06000853454C+
	?debug	C 4543544F520A0600075345475459504508060004+
	?debug	C 52494E470806000442595445080600054346696C+
	?debug	C 651B07000743537472696E671C07000473746174+
	?debug	C 80CF0700056674696D6580D007000C434170706C+
	?debug	C 69636174696F6E190700096370755F6D6F64656C+
	?debug	C 80880700106370755F6172636869746563747572+
	?debug	C 6580860700095F68656170696E666F80D3070008+
	?debug	C 68656170696E666F80D507000B66617268656170+
	?debug	C 696E666F80D60700044347445469070004434350+
	?debug	C 55680700104344657363726970746F725461626C+
	?debug	C 656A07000B5344657363726970746F726D070010+
	?debug	C 535461626C6544657363726970746F7280D80700+
	?debug	C 0D53466172506F696E746572333280D907000D53+
	?debug	C 466172506F696E746572313680DA070004626F6F+
	?debug	C 6C440700
	?debug	C E200076948616E646C6504000C69416363657373+
	?debug	C 466C61677304000A694D6F6465466C6167730A00+
	?debug	C 056F4E616D651C000A6F4469726563746F72791C+
	?debug	C 4A0F404346696C6540246263747224717640480F+
	?debug	C 404346696C6540636C6F73652471764248134043+
	?debug	C 46696C6540656E644F6646696C6524717646480F+
	?debug	C 404346696C654065726173652471764848104043+
	?debug	C 46696C65406578697374732471764A4815404346+
	?debug	C 696C65406765744C6F636174696F6E2471764C48+
	?debug	C 15404346696C654067657446696C656E616D6524+
	?debug	C 71764E481B404346696C6540676574556E697175+
	?debug	C 6546696C656E616D65247176504810404346696C+
	?debug	C 65404C6F61642471707A6352480E404346696C65+
	?debug	C 404F70656E247176544815404346696C65404F70+
	?debug	C 656E24713743537472696E67564817404346696C+
	?debug	C 65404F70656E24713743537472696E6774315848+
	?debug	C 11404346696C6540726561642471707A636C5A48+
	?debug	C 12404346696C6540726561644C696E652471765C+
	?debug	C 4815404346696C6540726561644C696E65247170+
	?debug	C 7A636C5E4813404346696C654073657441636365+
	?debug	C 737324716960481D404346696C65407365744469+
	?debug	C 726563746F727924713743537472696E67624813+
	?debug	C 404346696C65407365744D6F64652471707A6364+
	?debug	C 481A404346696C654077726974654C696E652471+
	?debug	C 3743537472696E6766C00E000000
	?debug	C E200086372537472696E671D0007694C656E6774+
	?debug	C 680448174043537472696E674061667465724C61+
	?debug	C 73742471707A631E48144043537472696E674061+
	?debug	C 7070656E642471707A632048194043537472696E+
	?debug	C 6740617070656E6424713743537472696E672248+
	?debug	C 184043537472696E67406265666F72654C617374+
	?debug	C 2471707A63244A114043537472696E6740246263+
	?debug	C 747224717627481F4043537472696E6740636F6E+
	?debug	C 7665727446726F6D496E666F726D697824717629+
	?debug	C 48114043537472696E674065726173652471762B+
	?debug	C 48144043537472696E6740676574436861727324+
	?debug	C 71762D48154043537472696E67406765744C656E+
	?debug	C 6774682471762F48154043537472696E6740696E+
	?debug	C 6465784F662471707A6331481A4043537472696E+
	?debug	C 6740696E6465784F6624713743537472696E6733+
	?debug	C 48154043537472696E6740696E73657274247170+
	?debug	C 7A63693548174043537472696E67407265706C61+
	?debug	C 63652471707A6374313748114043537472696E67+
	?debug	C 407365742471707A633948164043537472696E67+
	?debug	C 4073657424713743537472696E673B4816404353+
	?debug	C 7472696E6740737562737472696E67247169693D+
	?debug	C C004000000
	?debug	C E4000566616C736500008004747275650100
	?debug	C E200056D5F43505568481940434170706C696361+
	?debug	C 74696F6E40436F64654261736524717680BD481A+
	?debug	C 40434170706C69636174696F6E40436F64654C69+
	?debug	C 6D697424717680BF481440434170706C69636174+
	?debug	C 696F6E4043505524717680C2481940434170706C+
	?debug	C 69636174696F6E40446174614261736524717680+
	?debug	C C4481A40434170706C69636174696F6E40446174+
	?debug	C 614C696D697424717680C6481B40434170706C69+
	?debug	C 636174696F6E40456E747279506F696E74247176+
	?debug	C 80C8481440434170706C69636174696F6E405275+
	?debug	C 6E24717680CAC042000000
	?debug	C E200036561780C00036562780C00036563780C00+
	?debug	C 036564780C00036564690C00036573690C000365+
	?debug	C 62700C00036573700C000264730A000265730A00+
	?debug	C 0266730A000267730A000665666C6167730C0003+
	?debug	C 6372300C00036372320C00036372330C00056D5F+
	?debug	C 47445469000F6D5F654172636869746563747572+
	?debug	C 65808600086D5F654D6F64656C8088480E404343+
	?debug	C 50554050726F6265247176808A4A0E4043435055+
	?debug	C 402462637472247176808C490E40434350554024+
	?debug	C 62647472247176808E4815404343505540417263+
	?debug	C 6869746563747572652471768090480C40434350+
	?debug	C 55404352302471768092480D4043435055404352+
	?debug	C 302471756C809448154043435055404461746153+
	?debug	C 65676D656E74247175738096480F404343505540+
	?debug	C 45466C6167732471768098481040434350554045+
	?debug	C 466C6167732471756C809A480E40434350554046+
	?debug	C 6C616773247176809C480F404343505540466C61+
	?debug	C 677324717573809E481E404343505540496E7374+
	?debug	C 72756374696F6E506F696E74657224717573756C+
	?debug	C 80A0481A404343505540496E7465727275707473+
	?debug	C 456E61626C656424717680A2481E404343505540+
	?debug	C 496E7465727275707473456E61626C6564247134+
	?debug	C 626F6F6C80A448154043435055404973436F6D70+
	?debug	C 617469626C6524717680A6480C40434350554047+
	?debug	C 445424717680A948104043435055404744545224+
	?debug	C 71756C757380AB480E4043435055404D6F64656C+
	?debug	C 24717680AD480C4043435055404D535724717680+
	?debug	C AF480D4043435055404D53572471757380B1481A+
	?debug	C 40434350554050726F74656374696F6E456E6162+
	?debug	C 6C656424717680B3481E40434350554050726F74+
	?debug	C 656374696F6E456E61626C6564247134626F6F6C+
	?debug	C 80B54810404343505540526573746F7265247176+
	?debug	C 80B7480D4043435055405361766524717680B948+
	?debug	C 11404343505540576F726453697A6524717680BB+
	?debug	C C042000000
	?debug	C E200066D5F704350556B00086D5F705461626C65+
	?debug	C 6C00126D5F6944657363726970746F72436F756E+
	?debug	C 740A4823404344657363726970746F725461626C+
	?debug	C 6540416C6C6F636174655461626C65247175736F+
	?debug	C 4837404344657363726970746F725461626C6540+
	?debug	C 53657444657363726970746F7224717031315344+
	?debug	C 657363726970746F7275637563756C756C714839+
	?debug	C 404344657363726970746F725461626C65405365+
	?debug	C 744D656D6F727944657363726970746F72247170+
	?debug	C 31315344657363726970746F72756C756C734A1A+
	?debug	C 404344657363726970746F725461626C65402462+
	?debug	C 63747224717676491A404344657363726970746F+
	?debug	C 725461626C654024626474722471767848264043+
	?debug	C 44657363726970746F725461626C654041646453+
	?debug	C 65676D656E74247175637563756C756C7A481940+
	?debug	C 4344657363726970746F725461626C6540426173+
	?debug	C 652471767C4818404344657363726970746F7254+
	?debug	C 61626C65404350552471767E481D404344657363+
	?debug	C 726970746F725461626C65404350552471703443+
	?debug	C 4350558080481A404344657363726970746F7254+
	?debug	C 61626C65404C696D69742471768082C006000000
	?debug	C E2000A6C696D69745F305F31350A400000000000+
	?debug	C 0B6F66667365745F305F31350A0009626173655F+
	?debug	C 305F31350A4002000000000873656C6563746F72+
	?debug	C 0A000A626173655F31365F323308040474797065+
	?debug	C 080105647479706508020364706C080107707265+
	?debug	C 73656E7408000A617474726962757465736E4006+
	?debug	C 000000000C6F66667365745F31365F33310AC008+
	?debug	C 000000
	?debug	C E2040B6C696D69745F31365F3139080109617661+
	?debug	C 696C61626C650801047A65726F0801016408010B+
	?debug	C 6772616E756C617269747908000A626173655F32+
	?debug	C 345F333108C002000000
	?debug	C E2481A4043474454404164645365676D656E7424+
	?debug	C 7175637563756C756C8084C006000000
	?debug	C E4000743415F4E554C4C0000800743415F494150+
	?debug	C 580100
	?debug	C E40007434D5F4E554C4C00000008434D5F493830+
	?debug	C 383601000009434D5F4938303238360200000943+
	?debug	C 4D5F49383033383603000009434D5F4938303438+
	?debug	C 360400000A434D5F50454E5449554D0500800E43+
	?debug	C 4D5F50454E5449554D5F50524F0600
	?debug	C E2000673745F64657604000673745F696E6F0400+
	?debug	C 0773745F6D6F646504000873745F6E6C696E6B04+
	?debug	C 000673745F75696404000673745F676964040007+
	?debug	C 73745F7264657604000773745F73697A65060008+
	?debug	C 73745F6174696D6506000873745F6D74696D6506+
	?debug	C 000873745F6374696D6506C01E000000
	?debug	C E2050766745F747365630A060666745F6D696E0A+
	?debug	C 050766745F686F75720A050666745F6461790A04+
	?debug	C 0866745F6D6F6E74680A070766745F796561720A+
	?debug	C C004000000
	?debug	C E200075F70656E74727980D400055F73697A650A+
	?debug	C 00085F757365666C616704C006000000
	?debug	C E200037074721A000473697A650A0006696E5F75+
	?debug	C 736504C006000000
	?debug	C E2000370747280D7000473697A650C0006696E5F+
	?debug	C 75736504C00A000000
	?debug	C E200056C696D69740A0004626173650CC0060000+
	?debug	C 00
	?debug	C E200066F66667365740C000873656C6563746F72+
	?debug	C 0AC006000000
	?debug	C E200066F66667365740A000873656C6563746F72+
	?debug	C 0AC004000000
	end
